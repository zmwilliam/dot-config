# List of installed plugins
set -g @tpm_plugins '                \
  tmux-plugins/tpm                   \
  nhdaly/tmux-better-mouse-mode	     \
  tmux-plugins/tmux-prefix-highlight \
  thalesmello/tmux-cpu               \
  tmux-plugins/tmux-copycat          \
'

# https://gist.github.com/bbqtd/a4ac060d6f6b9ea6fe3aabe735aa9d95
set -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ",*256col*:Tc"

set -g monitor-bell off
set -g bell-action none
set -g visual-bell off

# Plugin Configurations
set -g @scroll-down-exit-copy-mode "off"
set -g @emulate-scroll-for-no-mouse-alternate-buffer "on"
#set -g default-shell $SHELL
set -g default-shell /opt/homebrew/bin/fish
set -g focus-events on
set -g @fingers-key f
set -g mouse on
set -g @asos-minlen 8
set -g @cpu_icon " "
set -g @open 'O'

# Change bind key
set -g prefix C-Space
unbind-key C-b
bind-key C-Space send-prefix

# Overrides for cursor shape
#set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Shortcut to clear history
bind C send-keys C-l \; run 'tmux clear-history'

# Move window to the right or left
bind-key -r < swap-window -t -1
bind-key -r > swap-window -t +1

# Move panes
#bind -r } swap-pane -D       # swap current pane with the next one
#bind -r { swap-pane -U       # swap current pane with the previous one

# Cycle layouts
bind-key -r n next-layout

# pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

bind '"' split-window -v -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
# bind c new-window -c "#{pane_current_path}"

# bind -r C-h previous-window
# bind -r C-l next-window     # select next window
bind -r C-a last-window
unbind-key l

bind Enter copy-mode # enter copy mode
bind b list-buffers  # list paster buffers
bind p paste-buffer  # paste from the top pate buffer
bind P choose-buffer # choose which buffer to paste from

# Missing mappings for pgcli
is_pgcli="ps -o state= -o comm= -t '#{pane_tty}' | grep -qiE 'pgcli'"
bind-key -n C-n if-shell "$is_pgcli" "send-keys Down" "send-keys C-n"
bind-key -n C-p if-shell "$is_pgcli" "send-keys Up" "send-keys C-p"

# the following vi-copy bindings match my vim settings
#   see https://github.com/gpakosz/.vim.git
bind-key -Tcopy-mode-vi v send -X begin-selection
bind-key -Tcopy-mode-vi y send -X copy-pipe "pbcopy"\; send -X clear-selection
bind-key -Tcopy-mode-vi Enter send -X copy-pipe "pbcopy"\; send -X clear-selection

bind-key -Tcopy-mode-vi C-h  select-pane -L
bind-key -Tcopy-mode-vi C-j  select-pane -D
bind-key -Tcopy-mode-vi C-k  select-pane -U
bind-key -Tcopy-mode-vi C-l  select-pane -R

bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Search backwards last prompt
bind-key b copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward ""

# Stay in copy mode on drag end, but otherwise exit for mouse up.
# Requires patch from https://github.com/tmux/tmux/issues/326
unbind-key -Tcopy-mode-vi MouseDragEnd1Pane
bind-key -Tcopy-mode-vi MouseUp1Pane send -X clear-selection

# Compatibility with original tmux.conf

# edit configuration
bind e new-window -n 'Tmux Config' "sh -c 'nvim ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"
#bind V new-window -n 'Vim Edit' 'sh -c '"'"'temp_file=$(mktemp) && pbpaste > $temp_file && nvim "+autocmd TextYankPost * if v:event.operator == \"y\" && v:event.regcontents == getline(1, \"\\\$\") && len(v:event.regcontents) > 1 && v:event.regtype ==# \"V\" | call feedkeys(\"ZZ\") | endif" $temp_file && pbcopy < $temp_file'"'"

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

set -g base-index 1         # start windows numbering at 1
setw -g pane-base-index 1   # make pane numbering consistent with windows

setw -g automatic-rename on

set -g renumber-windows on # renumber windows when a window is closed

set -g wrap-search off # Don't wrap search in tmux

set -g set-titles on                        # set terminal title
set -g set-titles-string '#S ● #I #W'

# 24 hour clock
setw -g clock-mode-style 24

# activity
set -g monitor-activity on
set -g visual-activity off

set -sg escape-time 10

source-file "~/.config/tmux/themes/nightfox.conf"

if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"


#if-shell "test -f ~/.tmux.theme" "source ~/.tmux.theme"
# set -g @nord_tmux_show_status_content "0"
#
# #+----------------+
# #+ Plugin Support +
# #+----------------+
# #+--- tmux-prefix-highlight ---+
# set -g @prefix_highlight_output_prefix "#[fg=brightcyan]#[bg=black]#[nobold]#[noitalics]#[nounderscore]#[bg=brightcyan]#[fg=black]"
# set -g @prefix_highlight_output_suffix ""
# set -g @prefix_highlight_copy_mode_attr "fg=brightcyan,bg=black,bold"
#
# #+--------+
# #+ Status +
# #+--------+
# #+--- Bars ---+
# set -g status-left "#[fg=black,bg=blue,bold] #S #[fg=blue,bg=black,nobold,noitalics,nounderscore]"
# set -g status-right "#{prefix_highlight}#[fg=brightblack,bg=black,nobold,noitalics,nounderscore]#[fg=white,bg=brightblack] %Y-%m-%d #[fg=white,bg=brightblack,nobold,noitalics,nounderscore]#[fg=white,bg=brightblack] #{cpu_icon}#{cpu_percentage} #[fg=cyan,bg=brightblack,nobold,noitalics,nounderscore]#[fg=black,bg=cyan,bold]"
#
# #+--- Windows ---+
# set -g window-status-format '#[fg=black,bg=brightblack,nobold,noitalics,nounderscore] #[fg=white,bg=brightblack]#I #[fg=white,bg=brightblack,nobold,noitalics,nounderscore] #[fg=white,bg=brightblack]#W (#(pwd="#{pane_current_path}"; echo ${pwd####*/})) #F #[fg=brightblack,bg=black,nobold,noitalics,nounderscore]'
# set -g window-status-current-format '#[fg=black,bg=cyan,nobold,noitalics,nounderscore] #[fg=black,bg=cyan]#I #[fg=black,bg=cyan,nobold,noitalics,nounderscore] #[fg=black,bg=cyan]#W (#(pwd="#{pane_current_path}"; echo ${pwd####*/})) #F #[fg=cyan,bg=black,nobold,noitalics,nounderscore]'
# set -g window-status-separator ""

run '~/.tmux/plugins/tpm/tpm'
